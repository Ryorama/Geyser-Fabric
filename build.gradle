plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	 
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
   	
  	compile files('C:\\Users/thema/Downloads/mcmods/Geyser-master/connector/connector-1.1.0.jar')
  	
  	modImplementation "com.github.TheEpicBlock:PolyMc:2.3.0"
  	
  	modImplementation group: 'net.devtech', name: 'arrp', version: '0.2.9'
   	
    shadow 'org.geysermc:connector:1.1.0'

    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
}

repositories {
    mavenLocal()

    maven {
        url = uri('https://repo.nukkitx.com/maven-releases/')
    }

    maven {
        url = uri('https://repo.nukkitx.com/maven-snapshots/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }
    
    maven {
		url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
	}
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    configurations = [project.configurations.shadow]
}

jar {
    from "LICENSE"
}

remapJar {
    dependsOn(shadowJar)
    input.set shadowJar.archiveFile.get()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
